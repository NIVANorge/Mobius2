
model("EasyTox") {

	extend("simplytox_model.txt") @exclude(downstream : connection)
	extend("easylake_simplyq_model.txt") @exclude(heat : quantity, sol : solver)
	
	lake_sed : compartment("Lake sediments")
	
	distribute(lake_sed, lake_index)
	solve(sol, lake_sed.water, lake_sed.sed)
	
	load("modules/easychem.txt",
		module("EasyChem-Particulate", air, epi, hyp, water, sed, wind, area, downstream, loc(lake_sed.sed)),  #Note: last location is target of settling fluxes
		module("SuperEasyC", epi, hyp, water, oc, sed, temp, toc),
		sedpars : preamble("SuperEasyC-Sediments dimensions", lake_sed),
		module("SuperEasyC-Sediments", lake_sed, water, sed, oc, sedpars)
	)
	
	load("modules/simplytox.txt",
		module("SimplyTox partitioning", "SimplyTox epilimnion", epi, water, oc, tox, temp, loc(epi.water.sed.oc), [m 3], [n g], constant(true), phys),
		module("SimplyTox partitioning", "SimplyTox hypolimnion", hyp, water, oc, tox, temp, loc(hyp.water.sed.oc), [m 3],  [n g], constant(true), phys),
		module("SimplyTox air-water", "SimplyTox lake air-water", air, epi, water, tox, temp, wind, loc(A_surf), phys),
		module("SimplyTox partitioning", "SimplyTox lake sediments", lake_sed, water, oc, tox, temp, loc(lake_sed.sed.oc), [m m], [n g, m-2], constant(false), phys)
	)
	load("modules/easytox.txt",
		module("EasyTox", air, epi, hyp, lake_sed, ice, water, oc, sed, tox, indicator, sw, temp, area, loc(A_surf), phys, sedpars))
		
	unit_conversion(epi.water.sed, lake_sed.sed) { 1/epi.area }
	unit_conversion(hyp.water.sed, lake_sed.sed) { 1/hyp.area }
	unit_conversion(hyp.water, lake_sed.water) { 1/hyp.area }
	# TODO
	#	We should be able to set bottom sediment temperature by accessing the t_bot parameter in easylake.
}