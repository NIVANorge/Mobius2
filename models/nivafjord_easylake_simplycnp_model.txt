

model("NIVAFjord-EasyLake-SimplyCNP") {

	#extend("nivafjord_model.txt")
	
	# Exclude overlapping definitions with nivafjord_model and things we want to redeclare here.
	extend("easylake_simplycnp_model.txt") @exclude(
		downstream : connection, 
		air : compartment, 
		water : quantity,
		heat : quantity,
		ice : quantity,
		o2  : quantity,
		temp : property,
		precip : property,
		wind : property,
		g_rad : property,
		pressure : property,
		a_hum : property,
		rho : property,
		lwd : property,
		sw : property,
		attn : property,
		freeze_temp : property,
		indicator : property,
		evap : property,
		z : property,
		area : property,
		wb_index : index_set
	)
	
	extend("nivafjord_simplycnp_model.txt") @exclude(
		downstream : connection,
		wb_index   : index_set
	)
	
	wb_index : index_set("Water body") @union(sc, lake_index, basin_idx)
	
	downstream : connection("Downstream") @directed_graph {
		(river|epi)+
	} @no_cycles
	
	/*
	horz : connection("Fjord horizontal") @directed_graph(e_idx) { 
		(river? layer+ bnd_layer?) | river
	} @no_cycles                    # Not sure if we should have no_cycles, but it should always be acheivable since the direction doesn't matter.
	
	edge       : compartment("Basin edge")
	edge_layer : compartment("Basin edge layer")
	distribute(edge,       basin_idx, e_idx)
	distribute(edge_layer, basin_idx, e_idx, layer_idx)
	
	par_group("Fjord horizontal boundary", edge_layer) {
		w_bnd  : par_real("Boundary width", [m], 0, 0, 10000)
	}
	
	load("modules/nivafjord/horizontal_fluxes.txt",
		module("NIVAFjord horizontal fluxes", basin, bnd_basin, layer, bnd_layer, river, edge, edge_layer, water, salt, temp, salinity, flow, rho, pressure, dz, h, horz, vert, w_bnd, A, dz0))
	
	fjord_phyt : quantity("Fjord phytoplankton") # To distinguish from freshwater once we add EasyLake.
	zoo        : quantity("Zooplankton")
	
	load("modules/nivafjord/fjordchem.txt",
		module("NIVAFjord chemistry", air, basin, layer, sediment, water, heat, o2, ice, oc, din, on, phos, op, sed, fjord_phyt, zoo, temp, salinity, wind, z, dz, indicator, attn, precip, area, A, vert, sw_vert))
		
	load("modules/nivafjord/boudary_chem.txt",
		module("NIVAFjord boundary chemistry", bnd_layer, water, o2, oc, sed, temp, salinity))
		
	load("modules/nivafjord/sediment.txt",
		module("NIVAFjord sediments", layer, sediment, water, sed, oc, on, phos, op, area, A, vert))
		
	solve(fjord_sol, sediment.sed)
	*/
}

