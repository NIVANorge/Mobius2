
model("NIVAFjord") {

	basin_idx     : index_set("Basin index")
	bnd_basin_idx : index_set("Boundary basin index")
	all_basins    : index_set("All basins") @union(basin_idx, bnd_basin_idx)
	e_idx         : index_set("Fjord connection index") @sub(basin_idx) # Ideally this should not be declared in this model, but then it sometimes is declared out of order.
	layer_idx     : index_set("Layer index") @sub(all_basins)
	
	air       : compartment("Atmosphere")
	basin     : compartment("Basin",          basin_idx)
	layer     : compartment("Fjord layer",    basin_idx, layer_idx)
	sediment  : compartment("Fjord sediment", basin_idx, layer_idx)
	bnd_basin : compartment("Boundary basin", bnd_basin_idx)
	bnd_layer : compartment("Boundary layer", bnd_basin_idx, layer_idx)
	
	water : quantity("Water")
	ice   : quantity("Ice")
	salt  : quantity("Salt")
	heat  : quantity("Heat energy")
	
	temp     : property("Temperature")
	salinity : property("Salinity")
	precip   : property("Precipitation")
	wind     : property("Wind speed")
	g_rad    : property("Global radiation")
	pressure : property("Pressure")
	a_hum    : property("Actual specific humidity")
	rho      : property("Density")
	lwd      : property("Downwelling longwave radiation")
	sw       : property("Shortwave radiation")
	attn     : property("Attenuation")
	freeze_temp : property("Ice formation temperature")
	indicator : property("Ice indicator")
	
	z    : property("Depth")
	dz   : property("Thickness")
	h    : property("Sea level")
	evap : property("Evaporation")
	area : property("Area")
	
	vert    : connection("Fjord vertical") @grid1d(layer, layer_idx)
	sw_vert : connection("Shortwave vertical") @grid1d(layer, layer_idx)
	
	par_group("Solver step") {
		solver_h    : par_real("Initial solver step", [hr], 1)
		solver_hmin : par_real("Solver relative min step", [], 0.01)
	}
	
	load("modules/atmospheric.txt",
		module("Atmospheric", air, temp, wind, g_rad, pressure, a_hum, rho, lwd))
	
	load("modules/airsea.txt",
		module("AirSea", "AirSea Fjord", air, basin, ice, heat, temp, precip, wind, g_rad, pressure, rho, a_hum, lwd, sw, attn, freeze_temp, indicator,
							evap, loc(basin.area), loc(layer.water[vert.top]), loc(layer.water.heat[sw_vert.top])))
	
	load("modules/nivafjord/basin.txt",
		dims : preamble("NIVAFjord dimensions", all_basins, layer_idx, layer),
		module("NIVAFjord basin", air, basin, layer, water, salt, heat, temp, salinity, pressure, wind, g_rad, rho, attn, z, dz, h, area, freeze_temp, vert, sw_vert, dims))
	
	load("modules/nivafjord/boundary_basin.txt", module("NIVAFjord boundary", bnd_basin, bnd_layer, water, heat, salt, temp, salinity, dz, h, rho, pressure, vert, dims))
	
	#fjord_sol : solver("NIVAFjord solver", euler, solver_h, solver_hmin)
	#solve(fjord_sol, layer.water, basin.ice)
	sol : solver("NIVAFjord solver", inca_dascru, solver_h, solver_hmin)
	solve(sol, layer.water, basin.ice)
}