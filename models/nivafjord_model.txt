
model("NIVAFjord") {
	
	
	air   : compartment("Atmosphere")
	oair  : compartment("Ocean-air interface")
	layer : compartment("Fjord layer")
	sed   : compartment("Fjord sediment")
	bnd   : compartment("Boundary ocean")
	bnd_layer : compartment("Boundary layer")
	
	water : quantity("Water")
	ice   : quantity("Ice")
	salt  : quantity("Salt")
	heat  : quantity("Heat energy")
	h     : quantity("Sea level")
	tracer : quantity("Tracer")
	
	evap_mm : property("Evaporation per area")
	
	temp     : property("Temperature")
	precip   : property("Precipitation")
	wind     : property("Wind speed")
	g_rad    : property("Global radiation")
	pressure : property("Pressure")
	a_hum    : property("Actual specific humidity")
	rho      : property("Density")
	lwd      : property("Downwelling longwave radiation")
	sw       : property("Shortwave radiation")
	attn     : property("Attenuation coefficient")
	
	vert    : connection("Fjord vertical", grid1d) { layer* }
	sw_vert : connection("Shortwave vertical", grid1d) { layer* }
	bnd_vert : connection("Boundary vertical", grid1d) { bnd_layer* }
	
	par_group("Layer parameters", layer) {
		A      : par_real("Layer area", [m 2], 10000, 0, 1e6)
		w_bnd  : par_real("Width to boundary", [m], 0, 0, 10000)
	}
	
	load("modules/atmospheric.txt", module("Atmospheric", air, temp, wind, g_rad, pressure, a_hum, rho, lwd))
	
	load("modules/airsea.txt",      module("AirSea", "AirSea Fjord", air, oair, ice, evap_mm, temp, precip, wind, g_rad, pressure, rho, a_hum, lwd, sw, attn,
											loc(A[vert.top]), loc(layer.water.heat[vert.top]), loc(layer.water.heat[sw_vert.top]), loc(layer.water.temp[vert.top])))
	
	load("modules/nivafjord.txt",   module("NIVAFjord", air, oair, layer, sed, bnd, bnd_layer, water, salt, heat, h, tracer, temp, precip, pressure, wind, g_rad, rho, attn, vert, sw_vert, bnd_vert, A, w_bnd))
	
	layer_idx : index_set("Layer index")
	
	distribute(layer, layer_idx)
	distribute(bnd_layer, layer_idx)
	
	solve(solver("Simply solver", "INCADascru", 0.1), layer.water, sed.heat/*, bnd_layer.water*/, oair.ice)
}