
model("EasyLake-SimplyQ") {
	
	extend("simplyq_model.txt")
	load("../modules/easylake.txt", el : module("EasyLake"))
	load("../modules/rivertemp.txt", module("RiverTemperature"))
	
	epi : compartment("Epilimnion")
	hyp : compartment("Hypolimnion")
	
	heat  : quantity("Thermal energy")
	ice   : quantity("Ice")
	
	simply_solver.solve(epi.water)
	simply_solver.solve(hyp.water)
	simply_solver.solve(epi.water.heat)
	simply_solver.solve(hyp.water.heat)
	simply_solver.solve(river.water.heat)
	simply_solver.solve(epi.ice)
	
	# TODO: Should be able to just say no_carry(heat) (?)
	el.evap.no_carry(epi.water.heat)       #Note this is already accounted for in other heat fluxes.
	
	lk : index_set("Lake")
	
	epi.distribute(lk)
	hyp.distribute(lk)
	
	# TODO: This should override what is in the simplyq model.  Or do we need a more advanced system, because what happens if we now try to add a SimplyC component for instance ?
	
	# override(       # something like this...
	ds : connection("Downstream", directed_tree) { (river|epi)* }
	# )
	rw.reach_out.to(ds)
	el.lake_out .to(ds)
}