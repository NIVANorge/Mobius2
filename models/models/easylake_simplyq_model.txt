
model("EasyLake-SimplyQ") {
	
	extend("simplyq_base.txt")
	
	#load("modules/pet.txt",      module("Penman-Monteith PET"))
	load("modules/pet.txt",       module("Degree-day PET"))
	load("modules/hbv_snow.txt",  module("HBVSnow"))
	
	load("modules/simplysoiltemp.txt", module("Simply soil temperature"))
	load("modules/easylake.txt", el : module("EasyLake"))
	load("modules/rivertemp.txt", module("RiverTemperature"))
	load("modules/atmospheric.txt", module("Atmospheric"))
	
	epi : compartment("Epilimnion")
	hyp : compartment("Hypolimnion")
	
	heat  : quantity("Thermal energy")
	ice   : quantity("Ice")
	
	solve(simply_solver, epi.water, hyp.water, epi.ice)
	
	el.evap.no_carry()       # By default don't carry dissolved substances in evaporation
	
	# NOTE: can't let the mixing flux carry heat, or it disturbs the heat equilibration built into the model.
	el.mix_down.no_carry(epi.water.heat)  #TODO: should be able to say no_carry(heat)  or something like that.
	el.mix_up.no_carry(hyp.water.heat)
	
	lake_index : index_set("Lake")
	
	distribute(epi, lake_index)
	distribute(hyp, lake_index)
	
	# TODO: This should override what is in the simplyq model.  Or do we need a more advanced system, because what happens if we now try to add a SimplyC component for instance ?
	
	# NOTE: Just update the regex for the compartments.
	connection("Downstream", directed_tree) { (river|epi)* } 
	el.lake_out .to(ds)
}