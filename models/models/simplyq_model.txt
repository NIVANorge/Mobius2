
model("SimplyQ") {
	
	air      : compartment("Atmosphere")
	snow_box : compartment("Snow layer")
	soil     : compartment("Soil")
	gw       : compartment("Groundwater")
	river    : compartment("River")
	
	snow     : quantity("Snow")
	water    : quantity("Water")
	
	temp     : property("Temperature")
	precip   : property("Precipitation")
	flow     : property("Flow")
	pet      : property("Potential evapotranspiration")
	
	par_group("Land cover", soil) {
		lu_prop  : par_real("Land use proportions", [], 1, 0, 1)
	}
	
	par_group("Catchment data", river) {
		a_catch  : par_real("Catchment area", [k m 2], 51.7, 1e-6, 7e6)
	}
	
	# TODO: For now we have to do this since we don't have to override the connection regex later in easylake_simplyq_model.txt
	epi      : compartment("Epilimnion")
	downstream : connection("Downstream", directed_tree) { (river|epi)* }
	
	###### Import modules
	load("modules/pet.txt",       module("Degree-day PET", air, soil, pet, temp))
	#load("modules/pet.txt",      module("Penman-Monteith PET"))
	
	load("modules/hbv_snow.txt",  module("HBVSnow", air, snow_box, snow, water, temp, precip, loc(soil.water)))
	
	load("modules/simplyq.txt",
		module("SimplyQ land", soil, gw, river, water, flow, pet, a_catch, loc(river.water), loc(river.water) ),
		module("SimplyQ river", river, water, flow, loc(downstream)))
		#module("SimplyQ river trapezoid", river, water, flow, loc(downstream)))	
	
	aggregation_weight(soil, gw)    { lu_prop }
	aggregation_weight(soil, river) { lu_prop }
	
	# Convert mm to m^3
	unit_conversion(soil.water, river.water) { a_catch ->> }   # the ->> converts to the expected unit for the unit conversion factor, which is m^3/mm (factor of 1000 from km2)
	unit_conversion(gw.water, river.water)   { a_catch ->> }
	
		
	###### Distribute compartments over index sets and set solvers
	
	sc : index_set("Subcatchment")
	lu : index_set("Landscape units")
	
	distribute(soil,  sc, lu)
	distribute(gw,    sc)
	distribute(river, sc)
	
	simply_solver : solver("Simply solver", "INCADascru", 0.1)
	
	solve(simply_solver, soil.water, gw.water, river.water)
	
}


