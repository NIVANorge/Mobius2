
model("SimplyQ") {
"""
General model description.
"""
	
	###### Import modules
	
	load("modules/simplyq.txt",   sw : module("SimplyQ land"), rw : module("SimplyQ river"))
	#load("modules/simplyq.txt",   sw : module("SimplyQ land"), rw : module("SimplyQ river trapezoid"))
	
	
	soil  : compartment("Soil")
	gw    : compartment("Groundwater")
	river : compartment("River")
	water : quantity("Water")
		
	###### Distribute modules over index sets and set solvers
	
	sc : index_set("Subcatchment")
	lu : index_set("Landscape units")
	
	distribute(soil,  sc, lu)
	distribute(gw,    sc)
	distribute(river, sc)
	
	simply_solver : solver("Simply solver", "INCADascru", 0.1)
	
	solve(simply_solver, soil.water, gw.water, river.water)

	##### Link fluxes between compartments and specify aggregation between compartments that are distributed differently, and unit conversions where volumes are different

	sn.p_rain     .to(soil.water)
	sn.melt_runoff.to(soil.water)
	sw.quick_flow .to(river.water)
	sw.soil_runoff.to(river.water)
	sw.gw_runoff  .to(river.water)
	
	sw.evap.no_carry()   # By default, don't carry dissolved substances in the evapotranspiration.
	
	ds : connection("Downstream", directed_tree) { river* }
	rw.reach_out  .to(ds)
	
	par_group("Land cover", soil) {
		lu_prop  : par_real("Land use proportions", [], 1, 0, 1)
	}
	
	par_group("Catchment data", river) {
		a_catch  : par_real("Catchment area", [k m 2], 51.7)
	}
	
	aggregation_weight(soil, gw) { lu_prop }
	aggregation_weight(soil, river) { lu_prop }
	
	# convert mm to m^3
	unit_conversion(soil.water, river.water) { a_catch ->> }   # the ->> converts to the expected unit for the unit conversion factor, which is m^3/mm (factor of 1000 from km2)
	unit_conversion(gw.water, river.water)   { a_catch ->> }
	
}


