
model("EasyLake-SimplyQ") {
	
	extend("simplyq_model.txt") @exclude(downstream : connection) #Exclude the downstream connection so that we can redeclare it with the epilimnion in it.
	
	epi      : compartment("Epilimnion")
	hyp      : compartment("Hypolimnion")
	
	ice      : quantity("Ice")
	
	wind     : property("Wind speed")
	g_rad    : property("Global radiation")
	pressure : property("Pressure")
	a_hum    : property("Actual specific humidity")
	rho      : property("Density")
	lwd      : property("Downwelling longwave radiation")
	sw       : property("Shortwave radiation")
	attn     : property("Attenuation coefficient")
	z        : property("Thickness")
	area     : property("Surface area")
	freeze_temp : property("Ice formation temperature")
	indicator : property("Ice indicator")
	
	evap  : property("Evaporation")
	
	heat : quantity("Heat energy")
	
	downstream : connection("Downstream") @directed_graph {
		(river|epi)+ out
	} @no_cycles
	
	load("modules/simplysoiltemp.txt", module("Simply soil temperature", air, soil, snow_box, snow, temp))
	load("modules/rivertemp.txt",      module("RiverTemperature", air, soil, river, water, heat, temp))
	load("modules/atmospheric.txt",    module("Atmospheric", air, temp, wind, g_rad, pressure, a_hum, rho, lwd))
	load("modules/airsea.txt",         module("AirSea", "AirSea Lake", air, epi, ice, heat, temp, precip, 
						wind, g_rad, pressure, rho, a_hum, lwd, sw, attn, freeze_temp, indicator, 
						evap, loc(epi.area), loc(epi.water), loc(epi.water.heat) ))
						
	load("modules/easylake.txt",       module("EasyLake", epi, hyp, water, heat, temp, z, freeze_temp, area, loc(downstream)))
	
	solve(sol, epi.water, hyp.water, epi.ice)
	
	lake_index : index_set("Lake")
	
	wb_index : index_set("Water body") @union(sc, lake_index)
	
	distribute(air, wb_index)
	distribute(snow_box, sc)
	
	distribute(epi, lake_index)
	distribute(hyp, lake_index)
	
}