
# NOTE: This one is just because the extend() system is not quite up to the task yet. Would prefer not to have to do this.

model("NIVAFjord-SimplyQ") {

	extend("nivafjord_model.txt")
	
	snow_box : compartment("Snow layer")
	soil     : compartment("Soil")
	gw       : compartment("Groundwater")
	river    : compartment("River")
	
	snow     : quantity("Snow")
	
	flow     : property("Flow")
	pet      : property("Potential evapotranspiration")
	
	par_group("Land cover", soil) {
		lu_prop  : par_real("Land use proportions", [], 1, 0, 1)
	}
	
	par_group("Catchment data", river) {
		a_catch  : par_real("Catchment area", [k m 2], 51.7, 1e-6, 7e6)
	}
	
	
	
	load("modules/pet.txt",       module("Degree-day PET", air, soil, pet, temp))
	
	load("modules/hbv_snow.txt",  module("HBVSnow", air, snow_box, snow, water, temp, precip, loc(soil.water)))
	
	load("modules/simplyq.txt",
		module("SimplyQ land", soil, gw, river, water, flow, pet, a_catch, loc(river.water), loc(river.water) ),
		module("SimplyQ river", river, water, flow, loc(downstream)))
		
	load("modules/simplysoiltemp.txt", module("Simply soil temperature", air, soil, snow_box, snow, temp))
	load("modules/rivertemp.txt",      module("RiverTemperature", air, soil, river, water, heat, temp))
	
	aggregation_weight(soil, gw)    { lu_prop }
	aggregation_weight(soil, river) { lu_prop }
	
	unit_conversion(soil.water, river.water) { a_catch }
	unit_conversion(gw.water, river.water)   { a_catch }
	

	sc     : index_set("Subcatchment")	
	ol_idx : index_set("Outlet index") @sub(sc)

	lu : index_set("Landscape units")
	
	distribute(soil,  sc, lu)
	distribute(gw,    sc)
	distribute(river, sc)
	
	solve(sol, soil.water, gw.water, river.water)
	
	
	#epi        : compartment("Epilimnion")
	downstream : connection("Downstream", directed_tree) { river+ }
	
	rho_water : constant("Water density", [k g, m-3], 1000) #TODO: allow loading library into model scope.
	unit_conversion(river.water, layer.water) { rho_water }  #NOTE: don't use river.water.rho here, because then we get the weird thing where it changes total mass depending on temperature.
	
	
	horz : connection("Fjord horizontal", directed_graph) { river[ol_idx]? layer[e_idx]* }  # and bnd_layer eventually.
	
	edge       : compartment("Basin edge")
	edge_layer : compartment("Basin edge layer")
	distribute(edge,       basin_idx, e_idx)
	distribute(edge_layer, basin_idx, e_idx, layer_idx)
	
	par_group("Fjord horizontal boundary", edge_layer) {
		w_bnd  : par_real("Boundary width", [m], 0, 0, 10000)
	}
	
	outlet : compartment("Outlet")
	distribute(outlet, sc, ol_idx)
	
	load("modules/nivafjord/horizontal_fluxes.txt", module("NIVAFjord horizontal fluxes", basin, layer, river, outlet, edge, edge_layer, water, heat, salt, temp, salinity, flow, rho, pressure, dz, horz, vert, w_bnd))
	
	
	
	tracer : quantity("Tracer")
	load("modules/nivafjord/tracer_test.txt", module("NIVAFjord tracer test", layer, river, water, tracer, horz))
}

