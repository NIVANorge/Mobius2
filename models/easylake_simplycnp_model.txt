
model("EasyLake-SimplyCNP") {
	extend("easylake_simplyq_model.txt")
	extend("simplyc_model.txt")
	extend("simplyn_model.txt")
	extend("simplyp_model.txt")
	
	
	phyt : quantity("Phytoplankton")
	o2   : quantity("O₂")
	
	bot  : compartment("Lake bottom sediments")
	distribute(bot, lake_index)
	solve(simply_solver, bot.sed)
	
	#TODO: Maybe also organic N, P later.
	# sed_area should be different for epi and hyp.
	load("modules/easychem.txt", 
		module("EasyChem", air, epi, hyp, water, oc, phyt, o2, din, phos, ice, temp, sw, wind, indicator, loc(A_surf), loc(A_surf)),
		module("EasyChem-Particulate", epi, hyp, bot, water, sed, phos, loc(A_surf))
	)
	
	module("Simple River O₂", version(0, 1, 0)) {
		"The purpose of this module is only to provide oxygen inputs to EasyChem."
		
		#TODO: Not sure if we should do anything else for this module. Could also have mass balance and instead set concs in flow from land.
		
		load("stdlib/seawater.txt", library("Sea oxygen"))
		load("stdlib/physiochemistry.txt", library("Chemistry"))
		
		par_group("River oxygen") {
			COS_alloch : par_real("Carbon Oxidation State alloch DOC", [], -0.5, -1, 0)
		}

		var(river.water.o2, [k g], [m g, l-1], "River oxygen") @override_conc {
			o2_saturation(temp, 0) * o2_mol_mass ->>
		}
		
		var(river.water.oc.o2, [k g], [], "River DOC oxidation state") @override_conc {
			1 + COS_alloch/4
		}
		
		var(river.water.phyt, [k g], [m g, l-1]) # Just to allow transport of it.
	}
}