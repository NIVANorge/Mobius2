
module("Simply soil temperature", 0, 0, 0) {
"""
TODO: description
NOTE: not finished, just for testing some systems

TODO: this should probably be rewritten with mobius2 systems and units in mind.
"""

	air      : compartment("Atmosphere")
	soil     : compartment("Soil")
	snow_box : compartment("Snow box")
	
	snow     : quantity("Snow (water equivalents)")
	
	temp     : property("Temperature")
	coup     : quantity("COUP temperature")
	
	soil.par_group("Soil temperature general") {
		depthst : par_real("Snow depth / soil temperature factor", [c m -1], -0.2, -3.0, -0.001)
		init_st : par_real("Initial soil temperature", [deg_c], 10, -30, 40)
	}
	
	soil.par_group("Soil temperature land") {
		stc     : par_real("Soil thermal conductivity / specific heat capacity", [m 2, M s -1], 0.4, 0.01, 0.8)
	}
	
	soil.has(coup, [deg_c]) .initial { init_st }
	
	flux(nowhere, soil.coup, "COUP temperature change") {
		(stc  / (2*15[c m]^2)) * (air.temp - last(coup)) ->>        # Soil temperature is computed at depth 15cm
	}
	
	soil.has(temp, [deg_c], "Soil temperature") { 
		coup * exp(depthst * snow_box.snow)
	} .initial { init_st }
}