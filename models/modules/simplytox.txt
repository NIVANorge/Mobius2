


module("SimplyTox", version(0, 0, 1)) {
"""
Testing functionality for now.
"""
	load("stdlib/physiochemistry.txt", library("Thermodynamics"))
	load("stdlib/basic_math.txt", library("Rates"))

	air   : compartment("Atmosphere")
	soil  : compartment("Soil")
	dsoil : compartment("Slow-accessible soil")
	gw    : compartment("Groundwater")
	river : compartment("River")
	
	water : quantity("Water")
	oc    : quantity("Organic carbon")
	tox   : quantity("Toxin")
	sed   : quantity("Sediment")
	
	temp  : property("Temperature")
	
	tox.par_group("Physiochemistry") {
		molmass     : par_real("Contaminant molar mass", [g, mol-1], 50, 0, 1000)
		molvol      : par_real("Contaminant molar volume", [c m 3, mol-1], 20, 0, 1000)
		dUaw        : par_real("Enthalpy of phase transfer between air and water", [k J, mol-1], 0, -100, 100)
		dUow        : par_real("Enthalpy of phase transfer between octanol and water", [k J, mol-1], 0, -100, 100)
		dUoa        : par_real("Enthalpy of phase transfer between octanol and air", [k J, mol-1], 0, -100, 100)
		kH25        : par_real("Henry's constant at 25°C", [Pa, m 3, mol-1], 0, 0, 100)  #TODO: better default?
		log10Kow25  : par_real("log10 Octanol-water partitioning coefficient at 25°C", [], 0, -10, 10)
		log10Koa25  : par_real("log10 Octanol-air partitioning coefficient at 25°C", [], 0, -10, 10)
		rwoc        : par_real("Water-OC rate coefficient", [m, day-1],  0.5, 0, 3)
		rfs         : par_real("Fast-Slow rate coefficient", [k g, m-2, day-1], 0.05, 0, 3)
		hlfast      : par_real("Contaminant half life", [day], 2000, 0.1, 2e10)
		hlslow      : par_real("Contaminant half life (slow accessible)", [day], 20000, 0.1, 2e10)
	}
	
	soil.par_group("Soil carbon") {
		mocf        : par_real("Soil organic carbon, fast accessible", [k g, m-2], 30, 0, 300)
		mocs        : par_real("Soil organic carbon, slow accessible", [k g, m-2], 3, 0, 300)
	}
	
	river.par_group("River carbon") {
		sed_oc_c   : par_real("Sediment SOC concentration", [k g, k g-1], 0.02, 0, 0.3)
	}
	
	#TODO: actually have to be able to do something like this:
	#  soil.tox.par_group()
	# but that syntax could be confusing since soil.tox is not a valid location.
	
	# TODO: Production / resorption of soil carbon should maybe not exchange toxins. (Especially not like now where it goes to 'nowhere')
	
	var(soil.oc, [k g, m-2])  .initial { mocf }
	var(dsoil.oc, [k g, m-2]) .initial { mocs }
	
	var(soil.water.tox, [n g, m-2], [n g, l-1], "Soil water dissolved toxin")
	var(soil.oc.tox, [n g, m-2], [n g, k g-1], "Fast-accessible SOC toxin")
	var(dsoil.oc.tox, [n g, m-2], [n g, k g-1], "Slow-accessible SOC toxin")
	var(soil.water.oc.tox, [n g, m-2], [n g, k g-1], "Soil DOC toxin")
	
	precip : property("Precipitation")
	prconc : property("Contaminant conc in precip")
	
	var(air.prconc, [n g, l-1])
	
	flux(nowhere, soil.water.tox, [n g, m-2, day-1], "Contaminant wet deposition") {
		air.precip * air.prconc ->>
	}
	
	Kow   : property("Octanol-water partitioning coefficient") {
		log10Kow := enthalpy_adjust_log10(log10Kow25, 25[deg_c]->[K], temp->[K], dUow)
		10^log10Kow
	}
	
	Koc   : property("SOC-water partitioning coefficient") {
		rhoSOC := 1900.0[k g, m-3]
		rOC    := 0.41   # Empirical constant.
		Kow * rOC / rhoSOC
	}
	
	Kdoc  : property("DOC-water partitioning coefficient") {
		rhoDOC := 1100.0[k g, m-3]
		(Kow - 0.45)^0.93 / rhoDOC
	}
	
	var(soil.water.tox.Kow, [])
	var(soil.water.tox.Koc, [m 3, k g-1])
	var(soil.water.tox.Kdoc, [m 3, k g-1])
	
	flux(soil.water.tox, soil.oc.tox, [n g, m-2, day-1], "Water-SOC contaminant exchange") {
		rwoc*((conc(water.tox)->[n g, m-3]) - conc(soil.oc.tox)/Koc)
	}
	
	flux(soil.water.tox, soil.water.oc.tox, [n g, m-2, day-1], "Water-DOC contaminant exchange (soil)") {
		rwoc*((conc(water.tox)->[n g, m-3]) - conc(water.oc.tox)/Kdoc)
	}
	
	flux(soil.oc.tox, dsoil.oc.tox, [n g, m-2, day-1], "Fast-Slow contaminant exchange") {
		rfs*(conc(soil.oc.tox) - conc(dsoil.oc.tox))
	}
	
	flux(soil.water.tox, nowhere, [n g, m-2, day-1], "Soil water dissolved toxin decay") { hl_to_rate(hlfast) * tox	}
	flux(soil.water.oc.tox, nowhere, [n g, m-2, day-1], "Soil DOC toxin decay") { hl_to_rate(hlfast) * tox }
	flux(soil.oc.tox, nowhere, [n g, m-2, day-1], "Fast-acessible SOC toxin decay") { hl_to_rate(hlfast) * tox }
	flux(dsoil.oc.tox, nowhere, [n g, m-2, day-1], "Slow-acessible SOC toxin decay") { hl_to_rate(hlslow) * tox }
	
	#TODO: Mineral layer should also maybe have a (smaller) slow SOC box
	var(gw.water.tox, [n g, m-2], [n g, l-1], "Groundwater dissolved toxin")
	var(gw.water.oc.tox, [n g, m-2], [n g, k g-1], "Groundwater DOC toxin")

	var(river.water.tox, [n g], [n g, l-1], "River dissolved toxin")
	var(river.water.oc.tox, [n g], [n g, k g-1], "River DOC toxin")
	
	var(river.water.sed.oc, [k g], [k g, k g-1], "River suspended sediment SOC") .override_conc { sed_oc_c }
	var(river.water.sed.oc.tox, [n g], [n g, k g-1], "River suspended sediment toxin")

	var(river.water.tox.Kow, [])
	var(river.water.tox.Koc, [m 3, k g-1])
	#river.water.tox.has(Kdoc, [m 3, k g-1])
	
	var(gw.water.tox.Kow, [])
	var(gw.water.tox.Kdoc, [m 3, k g-1])
	
	eff_a : par_real("River effective surface area", [m 2])
	
	var(gw.temp, [deg_c]) {
		aggregate(soil.temp) #Should probably be modeled separately.
	}
	
	flux(gw.water.tox, gw.water.oc.tox, [n g, m-2, day-1], "Water-DOC contaminant exchange (groundwater)") {
		rwoc*((conc(water.tox)->[n g, m-3]) - conc(water.oc.tox)/Kdoc)
	}
	
	# These are very unstable, but because of the time scale they are probably not that important any way.
	#flux(river.water.tox, river.water.sed.oc.tox, [n g, day-1], "Water-SOC contaminant exchange (river)") {
	#	eff_a*rwoc*((conc(water.tox)->[n g, m-3]) - conc(water.sed.oc.tox)/Koc)
	#}
	#flux(river.water.tox, river.water.oc.tox, [n g, day-1], "Water-DOC contaminant exchange (river)") {
	#	eff_a*rwoc*((conc(water.tox)->[n g, m-3]) - conc(water.oc.tox)/Kdoc)
	#}
	
	e_fact : property("Erosion factor")
	
	flux(soil.oc.tox, river.water.sed.oc.tox, [n g, m-2, day-1], "Sediment mobilization tox") {
		soil.e_fact*river.e_fact*sed_oc_c*conc(soil.oc.tox)->>
	}
	
	# Could maybe have a separate groundwater rate
	flux(gw.water.tox, nowhere, [n g, m-2, day-1], "Groundwater water dissolved toxin decay") { hl_to_rate(hlfast) * tox }
	flux(gw.water.oc.tox, nowhere, [n g, m-2, day-1], "Groundwater DOC toxin decay") { hl_to_rate(hlfast) * tox }
	
	flux(river.water.tox, nowhere, [n g, day-1], "River water dissolved toxin decay") { hl_to_rate(hlfast) * tox }
	flux(river.water.oc.tox, nowhere, [n g, day-1], "River DOC toxin decay") { hl_to_rate(hlfast) * tox }
	flux(river.water.sed.oc.tox, nowhere, [n g, day-1], "River suspended sediment toxin decay") { hl_to_rate(hlfast) * tox }
	
	
	# Remains to do: River sediment bed, air-water exchange (soil and river)
}



