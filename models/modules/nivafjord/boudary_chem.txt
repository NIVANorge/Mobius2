
module("NIVAFjord boundary chemistry", version(0, 0, 0),
	bnd_layer : compartment,
	water : quantity,
	o2 : quantity,
	oc : quantity,
	din : quantity,
	on : quantity,
	phos : quantity,
	op : quantity,
	phyt : quantity,
	chl_a : property,
	temp : property,
	salinity : property,
	sed : quantity,
	chem_par : preamble
) {

	par_group("Boundary organic matter") {
		bnd_cn    : par_real("Molar C/N ratio in boundary OM", [], 6.625, 1, 100, "The default is the Redfield ratio")
		bnd_cp    : par_real("Molar C/P ratio in boundary OM", [], 106, 50, 200, "The default is the Redfield ratio")
		pocfrac   : par_real("Particle organic carbon fraction", [], 0.5, 0, 1) 
	}

	load("stdlib/seawater.txt", library("Sea oxygen"))
	load("stdlib/physiochemistry.txt", library("Chemistry"))
	
	o2conc : property("O₂ conc")
	docconc : property("DOC conc")
	dinconc : property("DIN conc")
	dipconc : property("DIP conc")
	pocconc : property("POC conc")
	
	# Input series :
	var(bnd_layer.water.o2conc, [m g, l-1], "Boundary layer O₂ conc") {
		#In case data was not provided, assume it is at saturation
		#TODO: This is not a good idea except near surface?
		o2_saturation_concentration(temp, salinity)*o2_mol_mass->>
	}
	
	var(bnd_layer.water.docconc, [m g, l-1], "Boundary layer DOC conc")
	var(bnd_layer.water.dinconc, [m g, l-1], "Boundary layer NO3 conc")
	var(bnd_layer.water.dipconc, [m g, l-1], "Boundary layer PO4 conc")
	var(bnd_layer.water.chl_a, [m g, l-1], "Boundary layer chl-a conc")
	var(bnd_layer.water.pocconc, [m g, l-1], "Boundary layer POC conc")
	
	var(bnd_layer.water.o2, [k g], [m g, l-1], "Boundary layer O₂")
		@override_conc { o2conc }
	
	var(bnd_layer.water.oc, [k g], [m g, l-1], "Boundary layer DOC")
		@override_conc { docconc }
		
	var(bnd_layer.water.din, [k g], [m g, l-1], "Boundary layer DIN")
		@override_conc { dinconc }
		
	var(bnd_layer.water.on, [k g], [m g, l-1], "Boundary layer DON")
		@override_conc { docconc / cn_molar_to_mass_ratio(bnd_cn)  }
		
	var(bnd_layer.water.phos, [k g], [m g, l-1], "Boundary layer DIP")
		@override_conc { dipconc }
		
	var(bnd_layer.water.op, [k g], [m g, l-1], "Boundary layer DOP")
		@override_conc { docconc / cp_molar_to_mass_ratio(bnd_cp) }
		
	var(bnd_layer.water.phyt, [k g], [m g, l-1], "Boundary layer phytoplankton")
		@override_conc { chl_a / chl_a_f ->> }
		
	var(bnd_layer.water.sed, [k g], [m g, l-1], "Boundary layer SS")
		@override_conc { pocconc / pocfrac }
		
	var(bnd_layer.water.sed.oc, [k g], "Boundary layer POC")
		@override_conc { pocfrac } # This is the concentration in water.sed
	
	var(bnd_layer.water.sed.on, [k g], "Boundary layer PON")
		@override_conc { pocfrac / cn_molar_to_mass_ratio(bnd_cn) }
		
	var(bnd_layer.water.sed.op, [k g], "Boundary layer POP")
		@override_conc { pocfrac / cp_molar_to_mass_ratio(bnd_cp) }
		
	var(bnd_layer.water.sed.phos, [k g], "Boudary layer PIP")
		@override_conc { 0=>> }  #TODO: What should this be?
		
	var(bnd_layer.water.phyt.oc, [k g], "Boundary layer phytoplankton C")
		@override_conc { 1 }
		
	var(bnd_layer.water.phyt.on, [k g], "Boundary layer phytoplankton N")
		@override_conc { 1 / cn_molar_to_mass_ratio(phyt_cn) }
		
	var(bnd_layer.water.phyt.op, [k g], "Boundary layer phytoplankton P")
		@override_conc { 1 / cn_molar_to_mass_ratio(phyt_cp) }
		
	# TODO: CO2 and CH4
	
}