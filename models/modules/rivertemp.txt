

module("RiverTemperature", version(0, 1, 0),
	air   : compartment,
	soil  : compartment,
	river : compartment,
	water : quantity,
	heat  : quantity,
	temp  : property,
) {

	load("stdlib/physiochemistry.txt", library("Water utils"))
	
	min_t : constant("Minimum river temperature", [deg_c], 0.4)
	
	par_group("River temperature", river) {
		coeff : par_real("Air-river heat conductivity coefficient", [day-1], 1, 0.1, 10)
	}
	
	var(river.water.heat, [J], "River thermal energy") @initial { water_temp_to_heat(water, air.temp) }
	
	flux(nowhere, river.water.heat, [J, day-1], "River heat from land") {
		#TODO: maybe modify if melt water    
		V := in_flux(water) -> [m 3, day-1],
		t := max(min_t, aggregate(soil.temp)),
		water_temp_to_heat(V => [m 3], t) =>> #Again annoying that the 1/day doesn't "pass through" the function.
	}
	
	flux(nowhere, river.water.heat, [J, day-1], "River sensible heat flux") {
		(water_temp_to_heat(water, air.temp) - heat)*coeff * (air.temp >= min_t)
	}
	
	#TODO: Should be river.water.temp ?
	var(river.temp, [deg_c], "River temperature") {
		water_heat_to_temp(water, water.heat)
	}
	
}