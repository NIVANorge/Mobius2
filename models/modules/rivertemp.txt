

module("RiverTemperature", version(0, 1, 0)) {


	load("stdlib/physiochemistry.txt", library("Water utils"))
	
	water : quantity("Water")
	heat  : quantity("Thermal energy")
	
	soil  : compartment("Soil")
	river : compartment("River")
	air   : compartment("Atmosphere")
	
	temp  : property("Temperature")
	
	river.par_group("River temperature") {
		coeff : par_real("Air-river heat conductivity coefficient", [day-1], 1, 0.1, 10)
	}
	
	var(river.water.heat, [J], "River thermal energy") @initial { water_temp_to_heat(water, air.temp) }
	
	flux(nowhere, river.water.heat, [J, day-1], "River heat from land") {
		#TODO: maybe modify if melt water    
		V := in_flux(water) -> [m 3, day-1],
		water_temp_to_heat(V => [m 3], aggregate(soil.temp)) =>> #Again annoying that the 1/day doesn't "pass through" the function.
	}
	
	flux(nowhere, river.water.heat, [J, day-1], "River sensible heat flux") {
		#TODO: maybe not let river temperature go negative. I.e there is a small ice layer on top (that we don't model) which isolates the rest.
		(water_temp_to_heat(water, air.temp) - heat)*coeff
	}
	
	#TODO: Should be river.water.temp ?
	var(river.temp, [deg_c], "River temperature") {
		water_heat_to_temp(water, water.heat)
	}
	
}