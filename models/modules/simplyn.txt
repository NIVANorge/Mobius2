
module("SimplyN", version(0, 0, 5),
	soil   : compartment,
	gw     : compartment,
	river  : compartment,
	water  : quantity,
	din    : quantity,
	sn     : quantity,
	temp   : property,
	tn     : property
) {
"""
This is a simple dissolved inorganic nitrogen (DIN) model. The main assumption in the model is that there is a semi-constant input of DIN to the soil water from deposition and fixation, while loss (plant uptake + denitrification) is temperature-dependent. The latter two are bundled in one single process.

In addition fertilizer can be added at a single day per year. The fertilizer N is added as solid, and dissolves proportionally to the amount of new water (precipitation + snow melt) entering the soil.

Authors: Leah A. Jackson-Blake, Magnus D. Norling
"""

	load("stdlib/basic_math.txt", library("Response"))
	
	par_group("DIN universal params") {
		din_immob_rate   : par_real("Soilwater DIN uptake rate at 20째C", [m, day-1], 0, 0, 0.05, "(name is outdated, should be changed). This represents uptake and denitrification.")
		din_immob_q10    : par_real("Soilwater DIN uptake rate response to 10째C change (Q10)", [], 1.0, 1.0, 5.0)
		gw_conc_type     : par_enum("Groundwater DIN computation type", const) { const soil_avg mass_bal }
		gw_din_conc      : par_real("Groundwater DIN concentration", [m g, l-1], 0.0, 0.0, 30.0, "Only used if type is const")
		#gw_din_hl        : par_real("Groundwater DIN half-life", [day], 100, 0, 10000, "Only used if type is mass_bal")
		reach_denit_rate : par_real("Reach denitrification rate at 20째C", [day-1], 0.0, 0.0, 0.1)
		reach_denit_q10  : par_real("(Q10) Reach denitrification rate response to 10째C change in temperature", [], 1.0, 1.0, 5.0)
	}
	
	par_group("Soil DIN params varying by land use", soil) {
		sw_din_init        : par_real("Initial soilwater DIN concentration", [m g, l-1], 0.0, 0.0, 10.0)
		net_annual_N_input : par_real("Net annual DIN input to soil", [k g, ha-1, year-1], 0.0, 0.0, 1000.0, "(name outdated, should be changed) These are the gross DIN inputs to soil disregarding fertilizer inputs. Represents atmospheric deposition and fixation.")
		fert_day           : par_int("Fertilizer addition day", [day], 60, 1, 365)
		fert_n             : par_real("Fertilizer N", [k g, ha-1], 0, 0, 100)
		fert_rel           : par_real("Fertilizer DIN release", [m m-1], 0, 0, 1, "Per mm of soil water input (giving less dissolution in dry years)")
	}
	
	par_group("River DIN", river) {
		eff_din            : par_real("Reach effluent DIN inputs", [k g, day-1], 0.0, 0.0, 100.0)		
	}
	
	var(soil.sn, [k g, k m-2], "Soil undissolved fertilizer N")
	
	flux(out, soil.sn, [k g, k m-2, day-1], "Fertilizer N addition") {
		fert_n*1[day-1]->>   if time.day_of_year = fert_day,
		0                    otherwise
	}
	
	flux(soil.sn, soil.water.din, [k g, k m-2, day-1], "Fertilizer DIN release") {
		#soil.sn * fert_rel * soil.water ->>
		soil.sn * fert_rel * in_flux(soil.water) ->>
	}
	
	var(soil.water.din, [k g, k m -2], [m g, l-1], "Soil water DIN") @initial_conc { sw_din_init }
	
	var(gw.water.din, [k g, k m -2], [m g, l-1], "Groundwater DIN") @initial_conc { gw_din_conc } @override_conc {
		gw_din_conc                       if gw_conc_type.const,
		aggregate(conc(soil.water.din))   if gw_conc_type.soil_avg,
		no_override                       otherwise
	}
	
	var(river.water.din, [k g], [m g, l-1], "River water DIN") @initial_conc { conc(gw.water.din) }
	
	# Soil water fluxes
	
	flux(out, soil.water.din, [k g, k m-2, day-1], "Non-agricultural soil water DIN addition") {
		net_annual_N_input / time.days_this_year ->>
	}
	
	flux(soil.water.din, out, [k g, k m-2, day-1], "Soil water DIN uptake") {
		rate := q10_adjust(din_immob_rate, 20.0[deg_c], temp, din_immob_q10),
		conc(din) * rate ->>
	}
	
	#flux(gw.water.din, out, [k g, k m-2, day-1], "Groundwater DIN loss") {
	#	hl_to_rate(gw_din_hl)*din
	#}
	
	# Reach fluxes
	
	flux(out, river.water.din, [k g, day-1], "River effluent DIN") { eff_din }
	
	flux(river.water.din, out, [k g, day-1], "River DIN denitrification loss") {
		rate := q10_adjust(reach_denit_rate, 20.0[deg_c], temp, reach_denit_q10),
		din * rate
	}
	
	# Note: other modules can add to this one.
	var(river.water.tn, [m g, l-1], "River TN") {
		conc(din)
	}
}
