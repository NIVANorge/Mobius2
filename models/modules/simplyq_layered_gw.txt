
module("SimplyQ layered groundwater", version(0, 0, 2),
	gw    : compartment,
	water : quantity,
	flow  : property,
	pet   : property,
	vert  : connection,
	gw_target : loc
) {
"""
SimplyQ but with deep layered groundwater.
"""
# TODO: We should factor out the soil part to a common module between this and regular SimplyQ land.
#The problem is just that this will cause a lot of refactoring work in different saved parameter files.

	load("stdlib/basic_math.txt", library("Response"))
		
	par_group("Groundwater", gw) {
		#porosity : par_real("Porosity", [], 0.2, 0, 1)
		#th       : par_real("Thickness", [m], 1, 0.1, 10)
		#vert_K   : par_real("Vertical hydraulic conductivity", [m, s-1], 0)
		#horz_K   : par_real("Horizontal hydraulic conductivity", [m, s-1], 0)
		#spec_S   : par_real("Specific storage", [m-1], 0)
		cap       : par_real("Water capacity", [m m], 200)
		ext_c     : par_real("Extraction (constant)", [m m, day-1], 0)
		max_rate  : par_real("Max flow rate", [day-1], 0.1, 0, 10)
		h_loss    : par_real("Net horizontal loss fraction", [], 0, 0, 0.1)
	}
	
	var(gw.water,   [m m], "Groundwater volume") @initial { cap }

	h : property("Hydraulic head")
	
	var(gw.water.h, [m m]) {  water + h[vert.above]  }

	var(gw.water.flow, [m m, day-1], "Groundwater flow") {   max_rate*h   }
	
	# Don't have loss when water is smaller than a minimum.
	# This is to not have concentrations become numerically unstable.
	lim : property("Dry limit")
	var(gw.water.lim, []) {
		min := 0.5[m m],
		s_response(water, 0[m m], min, 0, 1)
	}
	
	flux(gw.water, vert, [m m, day-1], "Groundwater percolation") {
		maxperc := flow*(1 - h_loss),
		cap_below := cap[vert.below],
		lim * maxperc * s_response(water[vert.below]/cap_below, 0.95, 1, 1, 0) # Slowly turn off percolation when layer below goes above 95% of capacity
	}
	
	runoff : property("Runoff")
	
	var(gw.runoff, [m m, day-1], "Groundwater runoff") {
		flow2 := max(max_rate*(water.h - cap), 0),
		water.lim * flow2 * h_loss
	}
	
	flux(gw.water, gw_target, [m m, day-1], "Groundwater net horizontal loss") {
		runoff
	}
	
	ext : property("Extraction")
	
	var(gw.water.ext, [m m, day-1])
	
	flux(gw.water, out, [m m, day-1], "Groundwater extraction") {   ext + ext_c   }
}