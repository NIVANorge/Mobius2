

model("NIVAFjord lake SimplyTox") {
"""
TODO: Maybe we want a simpler biochemistry model for this one, not the entire NIVAFjord biochemistry...
"""
	
	extend("simplytox_model.txt") @exclude(
		downstream : connection,
		air : compartment,
		water : quantity,
		heat : quantity,
		sed : quantity,
		oc : quantity,
		temp : property,
		precip : property,
		wind : property,
		sol : solver
	)
	
	has_boundaries : constant(false)

	extend("nivafjord_chem_base.txt") @exclude(has_boundaries : constant) # Overrule the has_boundaries from the base model.
	
	downstream : connection("Downstream") @directed_graph { river+ } @no_cycles
	
	river_lake : connection("River-lake") @directed_graph { river+ layer } @no_cycles
							
	load("modules/nivafjord/lake_discharge.txt",
		module("NIVAFjord lake discharge", river, basin, layer, water, flow, dz, river_lake, vert, dims)
	)
							
	load("modules/simplytox.txt",
		module("SimplyTox partitioning", "SimplyTox fjord layer", layer, water, oc, tox, temp, loc(layer.water.sed.oc), [n g], constant(true), phys),
		module("SimplyTox partitioning", "SimplyTox fjord sediments", sediment, water, oc, tox, temp, loc(sediment.sed.oc), [n g], constant(false), phys),
		module("SimplyTox air-water",    "SimplyTox lake air-water", air, basin, water, tox, temp, wind, loc(basin.area), phys)
	)
	
	load("modules/nivafjord/tox.txt",
		module("NIVAFjord tox air-water", basin, layer, air, water, tox, temp, area, sw, vert, loc(basin.ice.indicator), dims, phys),
		module("NIVAFjord tox sediment-water", sediment, layer, water, oc, tox, area, dz, phys)
	)
	
	load("modules/nivafjord/horizontal_fluxes.txt",
		module("NIVAFjord simple realignment", basin, layer, water, dz, vert, dims))
	
	load("modules/easychem.txt",
		module("Simple River Oâ‚‚", river, water, o2, temp))
	
	# This could maybe go into the main NIVAFjord model (put in same file as point_sources). It is relevant for different applications.
	module("NIVAFjord extraction", version(0, 0, 1)) {

		par_group("Extraction", layer) {
			ext : par_real("Extraction rate", [m 3, day-1], 0, 0, 10000)
		}
		
		flux(layer.water, out, [m 3, day-1], "Layer extraction") {
			ext
		}
	}
	
	solve(sol, sediment.water)
}