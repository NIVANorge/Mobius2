
model("SimplyC chained") {
"""
A test version of SimplyC where the land units can be connected as a chain instead of paralelly discharging to the river.
"""

	sc : index_set("Subcatchment")
	lu : index_set("Landscape units")

	air      : compartment("Atmosphere", sc)
	snow_box : compartment("Snow layer", sc)
	soil     : compartment("Soil", sc, lu)
	gw       : compartment("Groundwater", sc)
	river    : compartment("River", sc)
	
	snow     : quantity("Snow")
	water    : quantity("Water")
	oc : quantity("Organic carbon")
	heat : quantity("Heat energy")
	
	temp     : property("Temperature")
	precip   : property("Precipitation")
	flow     : property("Flow")
	pet      : property("Potential evapotranspiration")
	
	par_group("Land cover", soil) {
		lu_prop  : par_real("Land use proportions", [], 1, 0, 1)
	}
	
	par_group("Catchment data", river) {
		a_catch  : par_real("Catchment area", [k m 2], 51.7, 1e-6, 7e6)
	}
	
	# TODO: For now we have to do this since we don't have a way to override the connection regex later in easylake_simplyq_model.txt
	epi        : compartment("Epilimnion")
	downstream : connection("Downstream") @directed_graph { (river|epi)+ out }
	downhill   : connection("Downhill")   @directed_graph { soil+ river }
	
	###### Import modules
	load("modules/pet.txt",            module("Degree-day PET", air, soil, pet, temp))
	
	load("modules/hbv_snow.txt",       module("HBVSnow", air, snow_box, snow, water, temp, precip, loc(soil.water)))
	load("modules/simplysoiltemp.txt", module("Simply soil temperature", air, soil, snow_box, snow, temp))
	load("modules/simplyq.txt",
		module("SimplyQ land", soil, gw, river, water, flow, pet, a_catch, loc(downhill), loc(river.water), constant(true)),
		module("SimplyQ river", river, water, flow, loc(downstream)))
		#module("SimplyQ river trapezoid", river, water, flow, loc(downstream)))
	load("modules/simplyc.txt",	
		module("SimplyC land", air, soil, gw, water, oc, temp),
		module("SimplyC river", river, gw, water, oc, temp))
	load("modules/rivertemp.txt",      module("RiverTemperature", air, soil, river, water, heat, temp))
	
	aggregation_weight(soil, gw)    { lu_prop }
	aggregation_weight(soil, river) { lu_prop }
	aggregation_weight(soil, soil)  { lu_prop / lu_prop[below] }
	
	unit_conversion(soil.water, river.water) { a_catch }
	unit_conversion(gw.water, river.water)   { a_catch }
	
	simply_solver : solver("Simply solver", inca_dascru, [2, hr], 0.01)
	
	solve(simply_solver, soil.water, gw.water, river.water)
	
}


