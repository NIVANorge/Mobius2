

model("Diffusion") {
	
	module("Diffusion", version(1, 0, 0)) {
		
		par_group("Layers", layer) {
			in_o2   : par_real("initial O²", [m g, c m-2], 0)
			dc      : par_real("Diffusion coeff", [c m, day-1], 0.001)
		}
		
		par_group("Bottom compartment", botcomp) {
			in_o2_bot : par_real("Bottom initial O²", [m g, c m-2], 100)
		}
		
		par_group("Side transfer", layer) {
			tc      : par_real("Transfer coeff", [], 0.05)
		}
		
		var(layer.o2, [m g, c m-2], "Layer O²") @initial { in_o2 }
		var(botcomp.o2, [m g, c m-2], "Bottom O²") @initial { in_o2_bot }
		
		c : connection("Layer connection", grid1d) { layer* }
		s : connection("Sideways", all_to_all) { layer* }
		
		z : constant("Layer thickness", [c m], 1)
		
		flux(layer.o2, c, [m g, c m-2, day-1], "Diffusion") {
			d := 0.5*(dc + dc[below]),
			d*(o2 - o2[below])/z ->>
		}
		
		flux(layer.o2[c.bottom], botcomp.o2, [m g, c m-2, day-1], "Input from bottom") {
			dc[bottom]*(o2[bottom]-botcomp.o2)/z ->>
		}
		
		flux(layer.o2, s, [m g, c m-2, day-1], "Sideflow") {
			d := 0.5*(dc + dc[below]),
			tc*d*(o2 - o2[below])/z ->>
		}
	}
	
	layer_index : index_set("Layer index")
	branch_index : index_set("Branch index")
	
	layer : compartment("Layer")
	botcomp : compartment("Bottom")
	o2    : quantity("O²")
	
	distribute(botcomp, branch_index)
	distribute(layer, branch_index, layer_index)
	
	sol : solver("Solver", "INCADascru", 0.1)
	solve(sol, layer.o2, botcomp.o2)
	
}