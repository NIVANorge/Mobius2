

model("Another simple") {

	sp : module("So simple", 1, 0, 0) {
	
		a : compartment("A")
		q : quantity("Q")
		
		a.has(q, unit(), "QA") .initial { b }
		
		a.par_group("Pars") {
			b : par_real("initial q", unit(), 0)
		}
		
		q_out :
		flux(a.q, out, "q out") {
			5
		}
	}
	
	simply_solver : solver("Simply solver", "INCADascru", 0.1)
	
	simply_solver.solve(a.q)
	
	i : index_set("A index")
	
	a : compartment("A")
	q : quantity("Q")
	
	a.distribute(i)
	
	n : neighbor("A graph", directed_tree) { i }
	
	sp.q_out.to(n)
}