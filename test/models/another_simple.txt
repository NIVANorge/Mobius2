

model("Another simple") {

	sp : module("So simple", 1, 0, 0) {
	
		a : compartment("A")
		b : compartment("B")
		q : quantity("Q")
		
		c : connection("graph", directed_tree) { (a|b)* }
		
		a.par_group("A pars") {
			iaq : par_real("Initial A.Q", unit(), 10)
		}
		
		a.has(q, unit(), "A.Q") .initial { iaq }
		b.has(q, unit(), "B.Q") .initial { 0 }
		
		flux(a.q, c, "A.Q out") { q*0.1	}
		flux(b.q, c, "B.Q out") { q*0.01 }
	}
	
	sol : solver("Solver", "INCADascru", 0.1)
	sol.solve(a.q)
	sol.solve(b.q)
	
	i : index_set("I")
	j : index_set("J")
	
	a : compartment("A")
	b : compartment("B")
	q : quantity("Q")
	
	a.distribute(i)
	b.distribute(j)
}