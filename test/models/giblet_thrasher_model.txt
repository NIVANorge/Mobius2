
model("Giblet-Thrasher test model") {
	
	module("Giblet-Thrasher", 1, 1, 0) {
		
		habitat : compartment("Habitat")
		
		load("stdlib/basic_math.txt", library("Response"))
		
		par_group("General parameters") {
			birth_time : par_int ("Giblet preferred birthday", [day], 120, 30, 335)
			pmig       : par_real("Giblet propensity to migrate", [day-1], 0.05, 0, 1)
			nomnom     : par_real("Predation rate", [day-1], 0.1)
			pred_birth : par_real("Thrasher birth rate", [day-1], 0.025)
			pred_death : par_real("Thrasher death rate", [day-1], 0.05)
			meteor_dth : par_real("Meteor strike death rate increase", [day-1], 0.7)
		}
		
		habitat.par_group("Habitat parameters") {
			init_pred  : par_real("Initial predators", [], 1)
			init_prey  : par_real("Initial prey", [], 1)
			prey_birth : par_real("Giblet birth rate", [day-1], 0.2)
		}
		
		habitat.par_group("Migration weights") {
			mig_wt : par_real("Migration weight", [], 0.1, 0, 1)
		}
		
		pred : quantity("Thrashers")
		prey : quantity("Giblets")
		
		meteor : property("Meteor strikes")
		
		var(habitat.meteor, [])
		
		var(habitat.pred, []) .initial { init_pred }
		var(habitat.prey, []) .initial { init_prey }
		
		flux(nowhere, habitat.prey, [day-1], "Giblet birth")     {  prey * prey_birth * bump_response(time.day_of_year, birth_time-60.0[day], birth_time, birth_time+60.0[day], 0.6, 1, 0.6) }
		
		flux(habitat.prey, nowhere, [day-1], "Predation")        {  nomnom * prey * pred ->> }
		
		flux(nowhere, habitat.pred, [day-1], "Thrasher birth")   {  pred_birth * prey * pred }
		
		flux(habitat.pred, nowhere, [day-1], "Thrasher death")   {  pred * (pred_death + meteor_dth*meteor) }
		
		mig : connection("Migration route", all_to_all) { habitat* }
		
		flux(habitat.prey, mig, [day-1], "Giblet migration")     {  prey * pred * pmig * mig_wt  }
	}
	
	habitat : compartment("Habitat")
	pred : quantity("Thrashers")
	prey : quantity("Giblets")
	
	sol : solver("LV-Solver", "INCADascru", 0.1)
	sol.solve(habitat.pred)
	sol.solve(habitat.prey)
	
	hi : index_set("Habitat index")
	habitat.distribute(hi)
}


