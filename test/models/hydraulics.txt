

model("Simple hydraulics test") {


	node : compartment("Node")
	conduit : compartment("Conduit")
	
	#water : quantity("Water")
	H : quantity("Hydraulic head")
	Q : quantity("Flow")
	
	ni : index_set("Node index") {
		e : index_set("Conduit index")
	}
	
	distribute(node, ni)
	distribute(conduit, ni, e)
	
	graph : connection("Connection graph", directed_graph) {
		node[e]
	}
	
	sol : solver("Solver", "INCADascru", 0.1, 1e-3)
	solve(sol, node.H, conduit.Q)
	
	module("Hydraulics", version(0, 0, 1)) {
		
		g : constant("Earth surface gravity", [m, s-2], 9.81)
		
		par_group("Node pars", node) {
			A   : par_real("Node surface area", [m 2], 10)
			H0  : par_real("Node invert elevation", [m], 0)
			ht0 : par_real("Initial node water level", [m], 0)
		}
		
		par_group("Conduit pars", conduit) {
			n : par_real("Manning coefficient (roughness)", [s, m-1/3], 0.04)
			L : par_real("Conduit length", [m], 1)
			w : par_real("Conduit width", [m], 0.2)
			cH0 : par_real("Conduit invert elevation top", [m], 0)
			cH1 : par_real("Conduit invert elevation bottom", [m], 0)
			
			# Should also have a max height for it to limit the flow cross section (?)
		}
		
		var(node.H, [m]) @initial { H0-ht0 }
		var(conduit.Q, [m 3, s-1], "Conduit flow") @initial { 0[m 3, s-1] } #TODO! Or maybe it works with it zero?
		
		dHdt : property("Height change")
		
		var(node.dHdt, [m, s-1]) {
			aggregate(conduit.Q)/A + in_flux(graph, H)
		}
		
		flux(out, conduit.Q, [m 3, s-2], "Flow change") {
			h0 := cH0 - node.H,
			h1 := cH1 - node.H[graph.below],
			
			A0 := max(0, h0)*w,     # Flow cross section at top of conduit
			A1 := max(0, h1)*w,     # Flow cross section at bottom of conduit
			
			# TODO: The avg A and R should be adjusted using the Froude number. See page 48.
			Aavg := (A0 + A1)/2,
			Ravg := h0 + h1 + w/2,
			
			dAdx := (A0-A1)/L,
			dHdx := (h0-h1)/L,
			
			dAdt := -0.5*(node.dHdt + node.dHdt[graph.below])*w,

			U := Q/Aavg,
			
			#TODO: The 0.001 should not be needed. Also: how to prevent Q from going negative (or H from going below cH0)?
			-0.001*(2*U*dAdt + U^2*dAdx - g*Aavg*dHdx - g*n^2*Q*abs(U)/Ravg^(4/3) )
		}
		
		# TODO: Instead compute node water volume and make H a property based on that
		
		# TODO: This is not correct. It should be received relative to the surface area..
		flux(node.H, graph, [m, s-1], "Height change flux") {
			-conduit.Q/A
		}
	
	}

}