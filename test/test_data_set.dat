

"""
Can have a docstring to describe the dataset. This gets saved when you save the file from e.g. MobiView (which does not happen to comments).
"""



index_set("Landscape units") [ "Forest" "Agricultural" ]
index_set("Reaches") [ "Coull" "Boyne" ]

neighbor("Downstream", "Reaches") [
	"Coull" -> "Boyne"               # Coull points at Boyne.
]

# could even do chains to make it easy to see what the branches are
#
# "One" -> "Two" -> "Three" -> "A" -> "B"
# "Bing" -> "Song" -> "Bong" -> "A"

# for directed acyclic graph neighbor types:
# 
# "One" -- "Two" -> "Three " -- "Four"      etc.
#
# Or is there another recognized graph format for text that we should just adopt? This looks a bit like DOT without the semicolons.

series [
	1997-1-1        # This doesn't declare start for all input data, just for this block.
	"Air temperature"	"Precipitation"["Reaches" : "Coull"] :
	0 1
	-2 1
	-3 4
]

series [
	"Precipitation"["Reaches" : "Boyne"]	"Potential evapotranspiration"[interp_linear repeat_yearly] :
1993-2-1	9	8
1992-1-4	0	1
]

# We don't declare index_set_dependencies anymore, or additional_time_series, these are inferred.

series("another_input_file.dat")

par_datetime("Start date") [ 2004-01-01 ]
par_datetime("End date")   [ 2005-12-31 ]

module("HBV snow", 1, 1, 0) {
	par_group("Snow") [] {                  # Here we don't specify the full allowed dependency for this group.        # Should allow omitting the []
		par_real("Degree-day factor for snowmelt")
		[ 2.74 ]
		
		par_real("Temperature at which precip falls as snow")
		[ 0 ]
		
		par_real("Temperature at which snow melts")
		[ 0 ]
		
		par_real("Refreeze efficiency")
		[ 0.5 ]
		
		par_real("Liquid water fraction")
		[ 0.5 ]
		
		par_real("Initial snow depth (water equivalents)")
		[ 10  ]
	}
}

module("Test soil water", 1, 0, 0) {
	par_group("Hydrology land") ["Landscape units"] {
		"Field capacity" :
		120 100
		
		"Baseflow index" :
		0.7 0.3
		
		"Soil water time constant" :
		2 3
	}
	
	par_group("Hydrology") {
		"Groundwater time constant" :
		60
	}
}

