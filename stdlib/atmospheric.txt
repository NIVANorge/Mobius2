

library("Meteorology") {
	# TODO: allow version numbers on libraries?
	
	latent_heat_of_vaporization : function(T : [deg_c]) {   # Harrison 1963
		2.501[M J, k g-1] - 2.361e-3[M J, k g-1, deg_c-1] * T
	}
	
	mean_barometric_pressure : function(elevation : [m])    {   # Doorenbos, Pruitt 1977
		elev := elevation => [],
		(101.3 - (0.01152 - 0.544e-6*elev)*elev) => [k Pa]
	}
	
	# NOTE: some of these were revised using Ventura & al 1998 An evaluation of common evapotranspiration equations.
	
	C_air             : constant("Specific heat capacity of air",    [J, k g-1, K-1], 1008)
	C_moist_air       : constant("Specific heat capacity of moist air", [k J, k g-1, K-1], 1.013)
	vapor_mol_to_mass : constant("Molar ratio to mass ratio of vapor in air", [], 0.62198)
	Rdry_air          : constant("Specific gas constant of dry air", [J, k g-1, K-1], 287.058)
	Rvap_air          : constant("Specific gas constant of vapor",   [J, k g-1, K-1], 461.495)
	
	air_density : function(temp : [deg_c], pressure : [h Pa], a_vap : [h Pa]) {
		tk := temp -> [K],
		((pressure - a_vap)/(tk*Rdry_air) + a_vap/(tk*Rvap_air)) -> [k g, m-3]
	}
	
	psychrometric_constant : function(pressure : [k Pa], lvap : [M J, k g-1])   {   # Brunt 1952
		# Takes atmospheric pressure and latent heat of vaporization.
		(C_moist_air->[M J, k g-1, K-1]) * pressure / (vapor_mol_to_mass * lvap)
	}
	
	#TODO: Do we need both the saturation vapor pressures?
	#saturation_vapor_pressure_murray : function(T : [deg_c])   {   # Tetens 1930, Murray 1967
	#	#exp( (16.78*T - 116.9[deg_c]) / (T + 237.3[deg_c]) )  #TODO: Find out where this formula came from any way.
	#	0.1608[k Pa] * exp(17.27*T/(T + 237.3[deg_c]))
	#}
	
	saturation_vapor_pressure : function(T : [deg_c])   {
		#P. R. Lowe, 1977, "An approximating polynomial for the computation of saturation vapor pressure, J. Appl. Meteor., 16, 100-103.
		#TODO: that paper has a separate formula for T < 0
		t  := T => [],
		(6.107799961 + t*(4.436518521e-1 + t*(1.428945805e-2 + t*(2.650648471e-4 + 
			t*(3.031240396e-6 + t*(2.034080948e-8 + t*6.136820929e-11)))))) => [h Pa]
	}
	
	slope_of_saturation_pressure_curve : function(T : [deg_c], svap : [k Pa]) {
		tk := T -> [K],
		(svap/tk)*(6790.5[K]/tk - 5.028)
		#4098.0 * svap / (T + 237.3)^2
	}
	
	dew_point_temperature : function(vapor_pressure : [h Pa]) {  # Henderson-Sellers 1984
		34.07[K] + 4157.0[K] / ln(2.1718e8[h Pa] / vapor_pressure)
	}
	
	specific_humidity_from_pressure : function(total_air_pressure : [h Pa], vapor_pressure : [h Pa]) {
		mixing_ratio := vapor_mol_to_mass * vapor_pressure / (total_air_pressure - vapor_pressure),
		mixing_ratio / (1 + mixing_ratio)                 # NOTE: we could maybe just return the mixing_ratio since it is <<1, and thus that is an ok approximation.
	}
}

library("Radiation") {

	load(library("Meteorology"))
	load("physiochemistry.txt", library("Thermodynamics"))
	load("basic_math.txt", library("Basic"))
	
	# TODO: Document!
	
	solar_constant : constant("Solar constant", [W, m-2], 1361)
	
	daily_average_extraterrestrial_radiation : function(latitude : [deg], day_of_year : [day]) {
		orbit_rad              := (2*pi*day_of_year)/365.0[day],
		lat_rad                := radians(latitude),
		solar_declination      := 0.409*sin(orbit_rad - 1.39),
		sunset_hour_angle      := acos(-tan(lat_rad)*tan(solar_declination)),
		inv_rel_dist_earth_sun := 1.0 + 0.033*cos(orbit_rad),
		
		(solar_constant / pi) * inv_rel_dist_earth_sun * (sunset_hour_angle * sin(lat_rad) * sin(solar_declination) + cos(lat_rad) * cos(solar_declination) * sin(sunset_hour_angle))
	}
	
	hourly_average_radiation : function(daily_mean_rad : [W, m-2], day_of_year : [day], hour_of_day : [hr], time_zone : [hr], latitude : [deg], longitude : [deg]) {
		orbit_rad              := (2*pi*day_of_year)/365.0[day],
		lat_rad                := radians(latitude),
		solar_declination      := 0.409*sin(orbit_rad - 1.39),
		sunset_hour_angle      := acos(-tan(lat_rad)*tan(solar_declination)),
		
		b                      := 2*pi*(day_of_year - 81[day])/365.0[day],
		eot                    := 9.87*sin(b) - 7.53*cos(b) - 1.5*sin(b),                    # "Equation of time"
		lsmt                   := 15[deg, hr-1]*time_zone,                                   # Local standard meridian
		ast                    := hour_of_day + eot + 4[min, deg-1]*(lsmt - longitude)->[hr], # Apparent true solar time
		hour_angle             := radians(15[deg, hr-1]*(ast - 12[hr])),
		
		cosshr := cos(sunset_hour_angle),
		factor := (pi/24)*(cos(hour_angle) - cosshr) / (sin(sunset_hour_angle) - sunset_hour_angle*cosshr),
		
		daily_mean_rad * max(0, factor)
	}
	
	clear_sky_shortwave : function(extrad : [W, m-2], elev : [m]) {
		# Shortwave on the earth surface given extraterrestrial radiation and elevation (assuming no cloud cover).
		extrad * (0.75 + 2e-5[m-1]*elev)
	}
	
	downwelling_longwave : function(air_temp : [deg_c], a_vap : [h Pa], cloud : []) {
		air_t := air_temp -> [K],
		dpt := dew_point_temperature(a_vap),
		dew_point_depression := dpt - air_t,
		cloud_effect := (10.77 * cloud^2 + 2.34*cloud - 18.44) => [K],
		vapor_effect := 0.84 * (dew_point_depression + 4.01[K]),
		eff_t := air_t + cloud_effect + vapor_effect,
		black_body_radiation(eff_t)
	}
}
	
