



	
	
	Do proper memory management for Math_Expr_FT. The current system is becoming unbearable, and quickly leads to leaks or double deletes.
	
	Clean up the State_Variable and Model_Instruction structs to make it less easy to have usage errors (maybe make accessors).
	
	Finish connection system (for compartments of multiple index sets for instance).
	


	Let declarations in inlined modules be visible in the parent model scope (?) or other way around is maybe more reasonable.
	
	Processes not specified per compartment / quantity. Can be attached to those.
		- something like compartment_type etc.
		- have to figure out what to do with duplicates of par_group etc. - ties into name system.
	
	
		
	Allow redeclaration of constants without conflict (?)

	Move to std::string instead of String_View in path_utils.. (if possible, had a problem when trying it before).
	
	Allow declaration of no_carry inside modules.
	
	Organize state var tree by quantity in MobiView
	
	*** Postpone: ****
		Override declarations.   --- not needed for connections since we found another way. Also, not certain what is the best way to do it.
	
	
		
		
	*****************   DONE:   ***********************
	
	Interchangable components for connections. Simple system.
		lake vs. river
	
	connection fluxes of dissolvedes seem to add to the base substance rather than the dissolved substance.
	
	Make and test a SimplyTox    (partial at least)
	
	Index set distribution of quantities
		+ par groups on quantities
		
	Probably only allow connection fluxes between state variables that are on solvers. (Currently set to be the default)
		
	Relative paths are always relative to the model source file, but this breaks when you do extend_model of a model from another folder.
	Same when including a library from another library...
	
	Make variables of type Source_Location be named source_loc consistently to not confuse with other things.
	
	Allow fluxes to have a default no_carry()
	
	Make it automatic that certain state variables are on solvers (dissolveds)
	